variables:
  PIPELINE_NAME: "Default pipeline name"

stages:
- test-runner
- secret-scanning
- yaml-validation
- ops-and-maint

# Test Runner Stage
test-runner:
  stage: test-runner
  rules:
    - if: $PIPELINE_NAME == "Debug"
      when: always
    - when: never
  tags:
  - pi5
  image: harbor.glythium.io/dockerhub/alpine
  script:
  - echo "The runner works!"


# Secret Scanning Stage
trufflehog-scan:
  stage: secret-scanning
  tags:
  - pi5
  image: harbor.glythium.io/dockerhub/trufflesecurity/trufflehog
  script:
  - trufflehog git file://. --since-commit main --branch ${CI_COMMIT_BRANCH} --fail
  - trufflehog filesystem . --only-verified --fail


# Validate YAML Stage
server-side-validation:
  stage: yaml-validation
  tags:
  - pi5
  image: harbor.glythium.io/dockerhub/bitnami/kubectl
  script:
  - for yaml in $(find . -name *.yaml); do
      kubectl apply -f "${yaml}" --dry-run=server;
    done
  allow_failure: true

diff-yaml:
  stage: yaml-validation
  tags:
  - pi5
  image: harbor.glythium.io/dockerhub/bitnami/kubectl
  script:
  - for yaml in $(ls -R | grep "\.yaml" | grep -v "template"); do
      kubectl diff -f $(find . -name "${yaml}") || status=$?;
      if [ ! -z $status ] && [ $status -gt 1 ]; then
          exit $status;
      fi;
    done
  allow_failure: true

# Ops and Maint Stage
update-kpack:
  stage: ops-and-maint
  rules:
    - if: $PIPELINE_NAME == "Ops and Maint"
      when: always
    - when: never
  tags:
  - pi5
  image: harbor.glythium.io/dockerhub/bitnami/git
  script:
  - cd services/kpack
  - chmod +x ./download-kpack.sh
  - ./download-kpack.sh

# image-relocation:
#   stage: ops-and-maint
#   rules:
#     - if: $PIPELINE_NAME == "Ops and Maint"
#       when: always
#     - when: never
#   tags:
#   - pi5
#   image:
#     name: harbor.glythium.io/dockerhub/ubuntu
#   script:
#   - cd ./services/docker-registry
#   - chmod +x image-relocation.sh
#   - ./image-relocation.sh
